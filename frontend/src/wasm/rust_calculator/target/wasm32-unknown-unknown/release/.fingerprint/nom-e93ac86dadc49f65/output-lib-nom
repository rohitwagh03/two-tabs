{"$message_type":"future_incompat","future_incompat_report":[{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15880,"byte_end":15881,"line_start":482,"line_end":482,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs","byte_start":9053,"byte_end":9086,"line_start":329,"line_end":329,"column_start":3,"column_end":36,"is_primary":false,"text":[{"text":"  map!(i, be_u8, | x | { x as i8 })","highlight_start":3,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"map!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15523,"byte_end":16003,"line_start":474,"line_end":487,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! map(","highlight_start":1,"highlight_end":18},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $g:expr) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, $submac!($($args)*), call!($g));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $submac2:ident!( $($args2:tt)* )) => (","highlight_start":1,"highlight_end":83},{"text":"    map_impl!($i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":1,"highlight_end":63},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $g:expr) => (","highlight_start":1,"highlight_end":35},{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":1,"highlight_end":41},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, call!($f), $submac!($($args)*));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `map`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs:482:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m482\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    map_impl!($i, call!($f), call!($g));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs:329:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  map!(i, be_u8, | x | { x as i8 })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `map`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15880,"byte_end":15881,"line_start":482,"line_end":482,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs","byte_start":9199,"byte_end":9234,"line_start":335,"line_end":335,"column_start":3,"column_end":38,"is_primary":false,"text":[{"text":"  map!(i, be_u16, | x | { x as i16 })","highlight_start":3,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"map!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15523,"byte_end":16003,"line_start":474,"line_end":487,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! map(","highlight_start":1,"highlight_end":18},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $g:expr) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, $submac!($($args)*), call!($g));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $submac2:ident!( $($args2:tt)* )) => (","highlight_start":1,"highlight_end":83},{"text":"    map_impl!($i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":1,"highlight_end":63},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $g:expr) => (","highlight_start":1,"highlight_end":35},{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":1,"highlight_end":41},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, call!($f), $submac!($($args)*));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `map`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs:482:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m482\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    map_impl!($i, call!($f), call!($g));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs:335:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  map!(i, be_u16, | x | { x as i16 })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `map`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15880,"byte_end":15881,"line_start":482,"line_end":482,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs","byte_start":9347,"byte_end":9382,"line_start":341,"line_end":341,"column_start":3,"column_end":38,"is_primary":false,"text":[{"text":"  map!(i, be_u32, | x | { x as i32 })","highlight_start":3,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"map!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15523,"byte_end":16003,"line_start":474,"line_end":487,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! map(","highlight_start":1,"highlight_end":18},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $g:expr) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, $submac!($($args)*), call!($g));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $submac2:ident!( $($args2:tt)* )) => (","highlight_start":1,"highlight_end":83},{"text":"    map_impl!($i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":1,"highlight_end":63},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $g:expr) => (","highlight_start":1,"highlight_end":35},{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":1,"highlight_end":41},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, call!($f), $submac!($($args)*));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `map`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs:482:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m482\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    map_impl!($i, call!($f), call!($g));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs:341:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  map!(i, be_u32, | x | { x as i32 })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `map`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15880,"byte_end":15881,"line_start":482,"line_end":482,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs","byte_start":9495,"byte_end":9530,"line_start":347,"line_end":347,"column_start":3,"column_end":38,"is_primary":false,"text":[{"text":"  map!(i, be_u64, | x | { x as i64 })","highlight_start":3,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"map!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15523,"byte_end":16003,"line_start":474,"line_end":487,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! map(","highlight_start":1,"highlight_end":18},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $g:expr) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, $submac!($($args)*), call!($g));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $submac2:ident!( $($args2:tt)* )) => (","highlight_start":1,"highlight_end":83},{"text":"    map_impl!($i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":1,"highlight_end":63},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $g:expr) => (","highlight_start":1,"highlight_end":35},{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":1,"highlight_end":41},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, call!($f), $submac!($($args)*));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `map`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs:482:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m482\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    map_impl!($i, call!($f), call!($g));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs:347:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  map!(i, be_u64, | x | { x as i64 })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `map`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15880,"byte_end":15881,"line_start":482,"line_end":482,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs","byte_start":10834,"byte_end":10867,"line_start":397,"line_end":397,"column_start":3,"column_end":36,"is_primary":false,"text":[{"text":"  map!(i, le_u8, | x | { x as i8 })","highlight_start":3,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"map!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15523,"byte_end":16003,"line_start":474,"line_end":487,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! map(","highlight_start":1,"highlight_end":18},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $g:expr) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, $submac!($($args)*), call!($g));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $submac2:ident!( $($args2:tt)* )) => (","highlight_start":1,"highlight_end":83},{"text":"    map_impl!($i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":1,"highlight_end":63},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $g:expr) => (","highlight_start":1,"highlight_end":35},{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":1,"highlight_end":41},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, call!($f), $submac!($($args)*));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `map`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs:482:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m482\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    map_impl!($i, call!($f), call!($g));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs:397:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m397\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  map!(i, le_u8, | x | { x as i8 })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `map`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15880,"byte_end":15881,"line_start":482,"line_end":482,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs","byte_start":10983,"byte_end":11018,"line_start":403,"line_end":403,"column_start":3,"column_end":38,"is_primary":false,"text":[{"text":"  map!(i, le_u16, | x | { x as i16 })","highlight_start":3,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"map!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15523,"byte_end":16003,"line_start":474,"line_end":487,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! map(","highlight_start":1,"highlight_end":18},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $g:expr) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, $submac!($($args)*), call!($g));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $submac2:ident!( $($args2:tt)* )) => (","highlight_start":1,"highlight_end":83},{"text":"    map_impl!($i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":1,"highlight_end":63},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $g:expr) => (","highlight_start":1,"highlight_end":35},{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":1,"highlight_end":41},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, call!($f), $submac!($($args)*));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `map`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs:482:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m482\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    map_impl!($i, call!($f), call!($g));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs:403:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  map!(i, le_u16, | x | { x as i16 })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `map`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15880,"byte_end":15881,"line_start":482,"line_end":482,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs","byte_start":11134,"byte_end":11169,"line_start":409,"line_end":409,"column_start":3,"column_end":38,"is_primary":false,"text":[{"text":"  map!(i, le_u32, | x | { x as i32 })","highlight_start":3,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"map!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15523,"byte_end":16003,"line_start":474,"line_end":487,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! map(","highlight_start":1,"highlight_end":18},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $g:expr) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, $submac!($($args)*), call!($g));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $submac2:ident!( $($args2:tt)* )) => (","highlight_start":1,"highlight_end":83},{"text":"    map_impl!($i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":1,"highlight_end":63},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $g:expr) => (","highlight_start":1,"highlight_end":35},{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":1,"highlight_end":41},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, call!($f), $submac!($($args)*));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `map`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs:482:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m482\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    map_impl!($i, call!($f), call!($g));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs:409:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m409\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  map!(i, le_u32, | x | { x as i32 })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `map`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15880,"byte_end":15881,"line_start":482,"line_end":482,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs","byte_start":11285,"byte_end":11320,"line_start":415,"line_end":415,"column_start":3,"column_end":38,"is_primary":false,"text":[{"text":"  map!(i, le_u64, | x | { x as i64 })","highlight_start":3,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"map!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":15523,"byte_end":16003,"line_start":474,"line_end":487,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! map(","highlight_start":1,"highlight_end":18},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $g:expr) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, $submac!($($args)*), call!($g));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $submac:ident!( $($args:tt)* ), $submac2:ident!( $($args2:tt)* )) => (","highlight_start":1,"highlight_end":83},{"text":"    map_impl!($i, $submac!($($args)*), $submac2!($($args2)*));","highlight_start":1,"highlight_end":63},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $g:expr) => (","highlight_start":1,"highlight_end":35},{"text":"    map_impl!($i, call!($f), call!($g));","highlight_start":1,"highlight_end":41},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"  ($i:expr, $f:expr, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":58},{"text":"    map_impl!($i, call!($f), $submac!($($args)*));","highlight_start":1,"highlight_end":51},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `map`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs:482:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m482\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    map_impl!($i, call!($f), call!($g));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\nom.rs:415:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  map!(i, le_u64, | x | { x as i64 })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `map`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `map` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":43273,"byte_end":43274,"line_start":1221,"line_end":1221,"column_start":43,"column_end":44,"is_primary":true,"text":[{"text":"    alt_parser!($i, call!($e) | $($rest)*);","highlight_start":43,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":43049,"byte_end":43075,"line_start":1211,"line_end":1211,"column_start":7,"column_end":33,"is_primary":false,"text":[{"text":"      alt_parser!($i, $($rest)*)","highlight_start":7,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":4132,"byte_end":4154,"line_start":138,"line_end":138,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\character.rs","byte_start":3025,"byte_end":3068,"line_start":135,"line_end":135,"column_start":1,"column_end":44,"is_primary":false,"text":[{"text":"named!(pub eol<char>, alt!(crlf | newline));","highlight_start":1,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":2477,"byte_end":4365,"line_start":95,"line_end":146,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":21},{"text":"    ($name:ident( $i:ty ) -> $o:ty, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":73},{"text":"        fn $name( i: $i ) -> $crate::IResult<$i,$o,u32> {","highlight_start":1,"highlight_end":58},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($name:ident<$i:ty,$o:ty,$e:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":74},{"text":"        fn $name( i: $i ) -> $crate::IResult<$i, $o, $e> {","highlight_start":1,"highlight_end":59},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($name:ident<$i:ty,$o:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":68},{"text":"        fn $name( i: $i ) -> $crate::IResult<$i, $o, u32> {","highlight_start":1,"highlight_end":60},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($name:ident<$o:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":62},{"text":"        fn $name<'a>( i: &'a[u8] ) -> $crate::IResult<&'a [u8], $o, u32> {","highlight_start":1,"highlight_end":75},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($name:ident, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":55},{"text":"        fn $name( i: &[u8] ) -> $crate::IResult<&[u8], &[u8], u32> {","highlight_start":1,"highlight_end":69},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    (pub $name:ident( $i:ty ) -> $o:ty, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":77},{"text":"        pub fn $name( i: $i ) -> $crate::IResult<$i,$o, u32> {","highlight_start":1,"highlight_end":63},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    (pub $name:ident<$i:ty,$o:ty,$e:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":78},{"text":"        pub fn $name( i: $i ) -> $crate::IResult<$i, $o, $e> {","highlight_start":1,"highlight_end":63},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    (pub $name:ident<$i:ty,$o:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":72},{"text":"        pub fn $name( i: $i ) -> $crate::IResult<$i, $o, u32> {","highlight_start":1,"highlight_end":64},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    (pub $name:ident<$o:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":66},{"text":"        pub fn $name( i: &[u8] ) -> $crate::IResult<&[u8], $o, u32> {","highlight_start":1,"highlight_end":70},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    (pub $name:ident, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":59},{"text":"        pub fn $name<'a>( i: &'a [u8] ) -> $crate::IResult<&[u8], &[u8], u32> {","highlight_start":1,"highlight_end":80},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":42987,"byte_end":43089,"line_start":1208,"line_end":1214,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! alt (","highlight_start":1,"highlight_end":19},{"text":"  ($i:expr, $($rest:tt)*) => (","highlight_start":1,"highlight_end":31},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      alt_parser!($i, $($rest)*)","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt_parser!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":43163,"byte_end":45069,"line_start":1219,"line_end":1286,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! alt_parser (","highlight_start":1,"highlight_end":26},{"text":"  ($i:expr, $e:ident | $($rest:tt)*) => (","highlight_start":1,"highlight_end":42},{"text":"    alt_parser!($i, call!($e) | $($rest)*);","highlight_start":1,"highlight_end":44},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)*) | $($rest:tt)*) => (","highlight_start":1,"highlight_end":64},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let res = $subrule!($i, $($args)*);","highlight_start":1,"highlight_end":42},{"text":"      match res {","highlight_start":1,"highlight_end":18},{"text":"        $crate::IResult::Done(_,_)     => res,","highlight_start":1,"highlight_end":47},{"text":"        $crate::IResult::Incomplete(_) => res,","highlight_start":1,"highlight_end":47},{"text":"        _                              => alt_parser!($i, $($rest)*)","highlight_start":1,"highlight_end":69},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)* ) => { $gen:expr } | $($rest:tt)+) => (","highlight_start":1,"highlight_end":82},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,$gen(o)),","highlight_start":1,"highlight_end":76},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i, $($rest)*)","highlight_start":1,"highlight_end":37},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident => { $gen:expr } | $($rest:tt)*) => (","highlight_start":1,"highlight_end":59},{"text":"    alt_parser!($i, call!($e) => { $gen } | $($rest)*);","highlight_start":1,"highlight_end":56},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident => { $gen:expr }) => (","highlight_start":1,"highlight_end":44},{"text":"    alt_parser!($i, call!($e) => { $gen });","highlight_start":1,"highlight_end":44},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)* ) => { $gen:expr }) => (","highlight_start":1,"highlight_end":67},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,$gen(o)),","highlight_start":1,"highlight_end":76},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i)","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident) => (","highlight_start":1,"highlight_end":27},{"text":"    alt_parser!($i, call!($e));","highlight_start":1,"highlight_end":32},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)*)) => (","highlight_start":1,"highlight_end":49},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,o),","highlight_start":1,"highlight_end":70},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i)","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr) => (","highlight_start":1,"highlight_end":17},{"text":"    $crate::IResult::Error($crate::Err::Position($crate::ErrorKind::Alt,$i))","highlight_start":1,"highlight_end":77},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `alt_parser`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs:1221:43\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    alt_parser!($i, call!($e) | $($rest)*);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\character.rs:135:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m135\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(pub eol<char>, alt!(crlf | newline));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `alt_parser`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `alt_parser` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":44620,"byte_end":44621,"line_start":1268,"line_end":1268,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"    alt_parser!($i, call!($e));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":43547,"byte_end":43573,"line_start":1230,"line_end":1230,"column_start":43,"column_end":69,"is_primary":false,"text":[{"text":"        _                              => alt_parser!($i, $($rest)*)","highlight_start":43,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":43235,"byte_end":43273,"line_start":1221,"line_end":1221,"column_start":5,"column_end":43,"is_primary":false,"text":[{"text":"    alt_parser!($i, call!($e) | $($rest)*);","highlight_start":5,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":43049,"byte_end":43075,"line_start":1211,"line_end":1211,"column_start":7,"column_end":33,"is_primary":false,"text":[{"text":"      alt_parser!($i, $($rest)*)","highlight_start":7,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":4132,"byte_end":4154,"line_start":138,"line_end":138,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\character.rs","byte_start":3025,"byte_end":3068,"line_start":135,"line_end":135,"column_start":1,"column_end":44,"is_primary":false,"text":[{"text":"named!(pub eol<char>, alt!(crlf | newline));","highlight_start":1,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":2477,"byte_end":4365,"line_start":95,"line_end":146,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! named (","highlight_start":1,"highlight_end":21},{"text":"    ($name:ident( $i:ty ) -> $o:ty, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":73},{"text":"        fn $name( i: $i ) -> $crate::IResult<$i,$o,u32> {","highlight_start":1,"highlight_end":58},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($name:ident<$i:ty,$o:ty,$e:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":74},{"text":"        fn $name( i: $i ) -> $crate::IResult<$i, $o, $e> {","highlight_start":1,"highlight_end":59},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($name:ident<$i:ty,$o:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":68},{"text":"        fn $name( i: $i ) -> $crate::IResult<$i, $o, u32> {","highlight_start":1,"highlight_end":60},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($name:ident<$o:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":62},{"text":"        fn $name<'a>( i: &'a[u8] ) -> $crate::IResult<&'a [u8], $o, u32> {","highlight_start":1,"highlight_end":75},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($name:ident, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":55},{"text":"        fn $name( i: &[u8] ) -> $crate::IResult<&[u8], &[u8], u32> {","highlight_start":1,"highlight_end":69},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    (pub $name:ident( $i:ty ) -> $o:ty, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":77},{"text":"        pub fn $name( i: $i ) -> $crate::IResult<$i,$o, u32> {","highlight_start":1,"highlight_end":63},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    (pub $name:ident<$i:ty,$o:ty,$e:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":78},{"text":"        pub fn $name( i: $i ) -> $crate::IResult<$i, $o, $e> {","highlight_start":1,"highlight_end":63},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    (pub $name:ident<$i:ty,$o:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":72},{"text":"        pub fn $name( i: $i ) -> $crate::IResult<$i, $o, u32> {","highlight_start":1,"highlight_end":64},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    (pub $name:ident<$o:ty>, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":66},{"text":"        pub fn $name( i: &[u8] ) -> $crate::IResult<&[u8], $o, u32> {","highlight_start":1,"highlight_end":70},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    (pub $name:ident, $submac:ident!( $($args:tt)* )) => (","highlight_start":1,"highlight_end":59},{"text":"        pub fn $name<'a>( i: &'a [u8] ) -> $crate::IResult<&[u8], &[u8], u32> {","highlight_start":1,"highlight_end":80},{"text":"            $submac!(i, $($args)*)","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":42987,"byte_end":43089,"line_start":1208,"line_end":1214,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! alt (","highlight_start":1,"highlight_end":19},{"text":"  ($i:expr, $($rest:tt)*) => (","highlight_start":1,"highlight_end":31},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      alt_parser!($i, $($rest)*)","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt_parser!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":43163,"byte_end":45069,"line_start":1219,"line_end":1286,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! alt_parser (","highlight_start":1,"highlight_end":26},{"text":"  ($i:expr, $e:ident | $($rest:tt)*) => (","highlight_start":1,"highlight_end":42},{"text":"    alt_parser!($i, call!($e) | $($rest)*);","highlight_start":1,"highlight_end":44},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)*) | $($rest:tt)*) => (","highlight_start":1,"highlight_end":64},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let res = $subrule!($i, $($args)*);","highlight_start":1,"highlight_end":42},{"text":"      match res {","highlight_start":1,"highlight_end":18},{"text":"        $crate::IResult::Done(_,_)     => res,","highlight_start":1,"highlight_end":47},{"text":"        $crate::IResult::Incomplete(_) => res,","highlight_start":1,"highlight_end":47},{"text":"        _                              => alt_parser!($i, $($rest)*)","highlight_start":1,"highlight_end":69},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)* ) => { $gen:expr } | $($rest:tt)+) => (","highlight_start":1,"highlight_end":82},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,$gen(o)),","highlight_start":1,"highlight_end":76},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i, $($rest)*)","highlight_start":1,"highlight_end":37},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident => { $gen:expr } | $($rest:tt)*) => (","highlight_start":1,"highlight_end":59},{"text":"    alt_parser!($i, call!($e) => { $gen } | $($rest)*);","highlight_start":1,"highlight_end":56},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident => { $gen:expr }) => (","highlight_start":1,"highlight_end":44},{"text":"    alt_parser!($i, call!($e) => { $gen });","highlight_start":1,"highlight_end":44},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)* ) => { $gen:expr }) => (","highlight_start":1,"highlight_end":67},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,$gen(o)),","highlight_start":1,"highlight_end":76},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i)","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident) => (","highlight_start":1,"highlight_end":27},{"text":"    alt_parser!($i, call!($e));","highlight_start":1,"highlight_end":32},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)*)) => (","highlight_start":1,"highlight_end":49},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,o),","highlight_start":1,"highlight_end":70},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i)","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr) => (","highlight_start":1,"highlight_end":17},{"text":"    $crate::IResult::Error($crate::Err::Position($crate::ErrorKind::Alt,$i))","highlight_start":1,"highlight_end":77},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt_parser!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":43163,"byte_end":45069,"line_start":1219,"line_end":1286,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! alt_parser (","highlight_start":1,"highlight_end":26},{"text":"  ($i:expr, $e:ident | $($rest:tt)*) => (","highlight_start":1,"highlight_end":42},{"text":"    alt_parser!($i, call!($e) | $($rest)*);","highlight_start":1,"highlight_end":44},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)*) | $($rest:tt)*) => (","highlight_start":1,"highlight_end":64},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let res = $subrule!($i, $($args)*);","highlight_start":1,"highlight_end":42},{"text":"      match res {","highlight_start":1,"highlight_end":18},{"text":"        $crate::IResult::Done(_,_)     => res,","highlight_start":1,"highlight_end":47},{"text":"        $crate::IResult::Incomplete(_) => res,","highlight_start":1,"highlight_end":47},{"text":"        _                              => alt_parser!($i, $($rest)*)","highlight_start":1,"highlight_end":69},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)* ) => { $gen:expr } | $($rest:tt)+) => (","highlight_start":1,"highlight_end":82},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,$gen(o)),","highlight_start":1,"highlight_end":76},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i, $($rest)*)","highlight_start":1,"highlight_end":37},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident => { $gen:expr } | $($rest:tt)*) => (","highlight_start":1,"highlight_end":59},{"text":"    alt_parser!($i, call!($e) => { $gen } | $($rest)*);","highlight_start":1,"highlight_end":56},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident => { $gen:expr }) => (","highlight_start":1,"highlight_end":44},{"text":"    alt_parser!($i, call!($e) => { $gen });","highlight_start":1,"highlight_end":44},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)* ) => { $gen:expr }) => (","highlight_start":1,"highlight_end":67},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,$gen(o)),","highlight_start":1,"highlight_end":76},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i)","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident) => (","highlight_start":1,"highlight_end":27},{"text":"    alt_parser!($i, call!($e));","highlight_start":1,"highlight_end":32},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)*)) => (","highlight_start":1,"highlight_end":49},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,o),","highlight_start":1,"highlight_end":70},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i)","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr) => (","highlight_start":1,"highlight_end":17},{"text":"    $crate::IResult::Error($crate::Err::Position($crate::ErrorKind::Alt,$i))","highlight_start":1,"highlight_end":77},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt_parser!","def_site_span":{"file_name":"C:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs","byte_start":43163,"byte_end":45069,"line_start":1219,"line_end":1286,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! alt_parser (","highlight_start":1,"highlight_end":26},{"text":"  ($i:expr, $e:ident | $($rest:tt)*) => (","highlight_start":1,"highlight_end":42},{"text":"    alt_parser!($i, call!($e) | $($rest)*);","highlight_start":1,"highlight_end":44},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)*) | $($rest:tt)*) => (","highlight_start":1,"highlight_end":64},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      let res = $subrule!($i, $($args)*);","highlight_start":1,"highlight_end":42},{"text":"      match res {","highlight_start":1,"highlight_end":18},{"text":"        $crate::IResult::Done(_,_)     => res,","highlight_start":1,"highlight_end":47},{"text":"        $crate::IResult::Incomplete(_) => res,","highlight_start":1,"highlight_end":47},{"text":"        _                              => alt_parser!($i, $($rest)*)","highlight_start":1,"highlight_end":69},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)* ) => { $gen:expr } | $($rest:tt)+) => (","highlight_start":1,"highlight_end":82},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,$gen(o)),","highlight_start":1,"highlight_end":76},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i, $($rest)*)","highlight_start":1,"highlight_end":37},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident => { $gen:expr } | $($rest:tt)*) => (","highlight_start":1,"highlight_end":59},{"text":"    alt_parser!($i, call!($e) => { $gen } | $($rest)*);","highlight_start":1,"highlight_end":56},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident => { $gen:expr }) => (","highlight_start":1,"highlight_end":44},{"text":"    alt_parser!($i, call!($e) => { $gen });","highlight_start":1,"highlight_end":44},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)* ) => { $gen:expr }) => (","highlight_start":1,"highlight_end":67},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,$gen(o)),","highlight_start":1,"highlight_end":76},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i)","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $e:ident) => (","highlight_start":1,"highlight_end":27},{"text":"    alt_parser!($i, call!($e));","highlight_start":1,"highlight_end":32},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr, $subrule:ident!( $($args:tt)*)) => (","highlight_start":1,"highlight_end":49},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"      match $subrule!( $i, $($args)* ) {","highlight_start":1,"highlight_end":41},{"text":"        $crate::IResult::Done(i,o)     => $crate::IResult::Done(i,o),","highlight_start":1,"highlight_end":70},{"text":"        $crate::IResult::Incomplete(x) => $crate::IResult::Incomplete(x),","highlight_start":1,"highlight_end":74},{"text":"        $crate::IResult::Error(_)      => {","highlight_start":1,"highlight_end":44},{"text":"          alt_parser!($i)","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"      }","highlight_start":1,"highlight_end":8},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":"","highlight_start":1,"highlight_end":1},{"text":"  ($i:expr) => (","highlight_start":1,"highlight_end":17},{"text":"    $crate::IResult::Error($crate::Err::Position($crate::ErrorKind::Alt,$i))","highlight_start":1,"highlight_end":77},{"text":"  );","highlight_start":1,"highlight_end":5},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `alt_parser`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\macros.rs:1268:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    alt_parser!($i, call!($e));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\Rohit\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nom-1.2.4\\src\\character.rs:135:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m135\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mnamed!(pub eol<char>, alt!(crlf | newline));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `alt_parser`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `alt_parser` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}]}
